!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common"),require("@angular/material/tabs"),require("@angular/material/select"),require("@angular/material/form-field"),require("@angular/material/radio"),require("@angular/material/checkbox"),require("@angular/material/input"),require("@angular/platform-browser/animations")):"function"==typeof define&&define.amd?define("@alexandrupaul7/ngx-cron-editor",["exports","@angular/core","@angular/forms","@angular/common","@angular/material/tabs","@angular/material/select","@angular/material/form-field","@angular/material/radio","@angular/material/checkbox","@angular/material/input","@angular/platform-browser/animations"],t):t(((e=e||self).alexandrupaul7=e.alexandrupaul7||{},e.alexandrupaul7["ngx-cron-editor"]={}),e.ng.core,e.ng.forms,e.ng.common,e.ng.material.tabs,e.ng.material.select,e.ng.material.formField,e.ng.material.radio,e.ng.material.checkbox,e.ng.material.input,e.ng.platformBrowser.animations)}(this,(function(e,t,a,n,s,r,o,i,l,c,h){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */function d(e,t,a,n){return new(a||(a=Promise))((function(s,r){function o(e){try{l(n.next(e))}catch(e){r(e)}}function i(e){try{l(n.throw(e))}catch(e){r(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof a?t:new a((function(e){e(t)}))).then(o,i)}l((n=n.apply(e,t||[])).next())}))}function m(e,t){var a,n,s,r,o={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:i(0),throw:i(1),return:i(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function i(r){return function(i){return function(r){if(a)throw new TypeError("Generator is already executing.");for(;o;)try{if(a=1,n&&(s=2&r[0]?n.return:r[0]?n.throw||((s=n.return)&&s.call(n),0):n.next)&&!(s=s.call(n,r[1])).done)return s;switch(n=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return o.label++,{value:r[1],done:!1};case 5:o.label++,n=r[1],r=[0];continue;case 7:r=o.ops.pop(),o.trys.pop();continue;default:if(!(s=o.trys,(s=s.length>0&&s[s.length-1])||6!==r[0]&&2!==r[0])){o=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){o.label=r[1];break}if(6===r[0]&&o.label<s[1]){o.label=s[1],s=r;break}if(s&&o.label<s[2]){o.label=s[2],o.ops.push(r);break}s[2]&&o.ops.pop(),o.trys.pop();continue}r=t.call(e,o)}catch(e){r=[6,e],n=0}finally{a=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,i])}}}Object.create;function y(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var n,s,r=a.call(e),o=[];try{for(;(void 0===t||t-- >0)&&!(n=r.next()).done;)o.push(n.value)}catch(e){s={error:e}}finally{try{n&&!n.done&&(a=r.return)&&a.call(r)}finally{if(s)throw s.error}}return o}function u(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(y(arguments[t]));return e}Object.create;var p,f,b,g={SUN:"Sunday",MON:"Monday",TUE:"Tuesday",WED:"Wednesday",THU:"Thursday",FRI:"Friday",SAT:"Saturday"},v={SUN:"duminică",MON:"luni",TUE:"marți",WED:"miercuri",THU:"joi",FRI:"vineri",SAT:"sâmbătă"},C={"#1":"First","#2":"Second","#3":"Third","#4":"Fourth","#5":"Fifth",L:"Last"},T={"#1":"prima zi","#2":"a doua zi","#3":"a treia zi","#4":"a patra zi","#5":"a cincea zi",L:"ultima zi"};!function(e){e[e.January=1]="January",e[e.February=2]="February",e[e.March=3]="March",e[e.April=4]="April",e[e.May=5]="May",e[e.June=6]="June",e[e.July=7]="July",e[e.August=8]="August",e[e.September=9]="September",e[e.October=10]="October",e[e.November=11]="November",e[e.December=12]="December"}(p||(p={})),function(e){e[e.Ianuarie=1]="Ianuarie",e[e.Februarie=2]="Februarie",e[e.Martie=3]="Martie",e[e.Aprilie=4]="Aprilie",e[e.Mai=5]="Mai",e[e.Iunie=6]="Iunie",e[e.Iulie=7]="Iulie",e[e.August=8]="August",e[e.Septembrie=9]="Septembrie",e[e.Octombrie=10]="Octombrie",e[e.Noviembrie=11]="Noviembrie",e[e.Decembrie=12]="Decembrie"}(f||(f={})),function(e){e.quartz="quartz",e.standard="standard"}(b||(b={}));var D=function(){function e(){this._initializing=!0,this.cronChange=new t.EventEmitter,this.selectOptions=this.getSelectOptions()}return Object.defineProperty(e.prototype,"cron",{get:function(){return this.localCron},set:function(e){this.localCron=e,this._initializing||this.cronChange.emit(this.localCron)},enumerable:!1,configurable:!0}),e.prototype._tabsList=function(){var e=[];return this.options.hideMinutesTab||e.push("minutes"),this.options.hideHourlyTab||e.push("hourly"),this.options.hideDailyTab||e.push("daily"),this.options.hideWeeklyTab||e.push("weekly"),this.options.hideMonthlyTab||e.push("monthly"),this.options.hideYearlyTab||e.push("yearly"),this.options.hideAdvancedTab||e.push("advanced"),e},Object.defineProperty(e.prototype,"selectedTabIndex",{get:function(){return this._selectedTabIndex},set:function(e){this._selectedTabIndex=e,this._activeTab=this._tabsList()[e],this.regenerateCron()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"activeTab",{get:function(){return this._activeTab},set:function(e){this._activeTab=e,this._selectedTabIndex=this._tabsList().indexOf(e),this.regenerateCron()},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isCronFlavorQuartz",{get:function(){return this.options.cronFlavor===b.quartz},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"isCronFlavorStandard",{get:function(){return this.options.cronFlavor===b.standard},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"yearDefaultChar",{get:function(){return this.options.cronFlavor===b.quartz?"*":""},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"weekDayDefaultChar",{get:function(){return this.options.cronFlavor===b.quartz?"?":"*"},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"monthDayDefaultChar",{get:function(){return this.options.cronFlavor===b.quartz?"?":"*"},enumerable:!1,configurable:!0}),e.prototype.ngOnInit=function(){return d(this,void 0,void 0,(function(){return m(this,(function(e){return this.state=this.getDefaultState(),this.handleModelChange(this.cron),(null===this._selectedTabIndex||void 0===this._selectedTabIndex||this.selectedTabIndex<0)&&(this.selectedTabIndex=0),this.regenerateCron(),this._initializing=!1,[2]}))}))},e.prototype.ngOnChanges=function(e){return d(this,void 0,void 0,(function(){var t;return m(this,(function(a){return(t=e.cron)&&!t.firstChange&&this.handleModelChange(this.cron),[2]}))}))},e.prototype.setActiveTab=function(e,t){this.disabled||(this.activeTab=e,this.regenerateCron())},e.prototype.dayDisplay=function(e){var t=g[e];return"ro"==this.options.tLanguage&&(t=v[e]),t},e.prototype.monthWeekDisplay=function(e){var t=C[e];return"ro"==this.options.tLanguage&&(t=T[e]),t},e.prototype.monthDisplay=function(e){var t=p[e];return"ro"==this.options.tLanguage&&(t=f[e]),t},e.prototype.monthDayDisplay=function(e){return"L"===e?"Last Day":"LW"===e?"Last Weekday":"1W"===e?"First Weekday":"ro"==this.options.tLanguage?e:""+e+this.getOrdinalSuffix(e)+" day"},e.prototype.regenerateCron=function(){var e=this;this.isDirty=!0;var t=[];switch(this.activeTab){case"minutes":t=[this.yearDefaultChar,this.weekDayDefaultChar,"*","1/1","0/"+this.state.minutes.minutes],this.isCronFlavorQuartz&&t.push(this.state.minutes.seconds);break;case"hourly":t=[this.yearDefaultChar,this.weekDayDefaultChar,"*","1/1","0/"+this.state.hourly.hours,this.state.hourly.minutes],this.isCronFlavorQuartz&&t.push(this.state.hourly.seconds);break;case"daily":switch(this.state.daily.subTab){case"everyDays":t=[this.yearDefaultChar,this.weekDayDefaultChar,"*","1/"+this.state.daily.everyDays.days,this.hourToCron(this.state.daily.everyDays.hours,this.state.daily.everyDays.hourType),this.state.daily.everyDays.minutes],this.isCronFlavorQuartz&&t.push(this.state.daily.everyDays.seconds);break;case"everyWeekDay":t=[this.yearDefaultChar,"MON-FRI","*",this.monthDayDefaultChar,this.hourToCron(this.state.daily.everyWeekDay.hours,this.state.daily.everyWeekDay.hourType),this.state.daily.everyWeekDay.minutes],this.isCronFlavorQuartz&&t.push(this.state.daily.everyWeekDay.seconds);break;default:throw"Invalid cron daily subtab selection"}break;case"weekly":var a=this.selectOptions.days.reduce((function(t,a){return e.state.weekly[a]?t.concat([a]):t}),[]).join(",");t=[this.yearDefaultChar,a,"*",this.monthDayDefaultChar,this.hourToCron(this.state.weekly.hours,this.state.weekly.hourType),this.state.weekly.minutes],this.isCronFlavorQuartz&&t.push(this.state.weekly.seconds);break;case"monthly":switch(this.state.monthly.subTab){case"specificDay":t=[this.yearDefaultChar,this.weekDayDefaultChar,"1/"+this.state.monthly.specificDay.months,this.state.monthly.specificDay.day,this.hourToCron(this.state.monthly.specificDay.hours,this.state.monthly.specificDay.hourType),this.state.monthly.specificDay.minutes],this.isCronFlavorQuartz&&t.push(this.state.monthly.specificDay.seconds);break;case"specificWeekDay":t=[this.yearDefaultChar,""+this.state.monthly.specificWeekDay.day+this.state.monthly.specificWeekDay.monthWeek,"1/"+this.state.monthly.specificWeekDay.months,this.monthDayDefaultChar,this.hourToCron(this.state.monthly.specificWeekDay.hours,this.state.monthly.specificWeekDay.hourType),this.state.monthly.specificWeekDay.minutes],this.isCronFlavorQuartz&&t.push(this.state.monthly.specificWeekDay.seconds);break;default:throw"Invalid cron monthly subtab selection"}break;case"yearly":switch(this.state.yearly.subTab){case"specificMonthDay":t=[this.yearDefaultChar,this.weekDayDefaultChar,this.state.yearly.specificMonthDay.month,this.state.yearly.specificMonthDay.day,this.hourToCron(this.state.yearly.specificMonthDay.hours,this.state.yearly.specificMonthDay.hourType),this.state.yearly.specificMonthDay.minutes],this.isCronFlavorQuartz&&t.push(this.state.yearly.specificMonthDay.seconds);break;case"specificMonthWeek":t=[this.yearDefaultChar,this.state.yearly.specificMonthWeek.monthWeek,this.state.yearly.specificMonthWeek.day,this.state.yearly.specificMonthWeek.month,this.monthDayDefaultChar,this.hourToCron(this.state.yearly.specificMonthWeek.hours,this.state.yearly.specificMonthWeek.hourType),this.state.yearly.specificMonthWeek.minutes],this.isCronFlavorQuartz&&t.push(this.state.yearly.specificMonthWeek.seconds);break;default:throw"Invalid cron yearly subtab selection"}break;case"advanced":this.cron=this.state.advanced.expression;break;default:throw"Invalid cron active tab selection"}[5,4,1].forEach((function(e){"0/1"===t[e]&&(t[e]="*")})),[2,3].forEach((function(e){"1/1"===t[e]&&(t[e]="*")})),this.cron=t.reverse().join(" ").trim()},e.prototype.getAmPmHour=function(e){return this.options.use24HourTime?e:(e+11)%12+1},e.prototype.getHourType=function(e){return this.options.use24HourTime?void 0:e>=12?"PM":"AM"},e.prototype.hourToCron=function(e,t){return this.options.use24HourTime?e:"AM"===t?12===e?0:e:12===e?12:e+12},e.prototype.handleModelChange=function(e){var t=this;if(this.isDirty)this.isDirty=!1;else{if(this.isDirty=!1,!this.cronIsValid(e)){if(this.isCronFlavorQuartz)throw"Invalid cron expression, there must be 6 or 7 segments";if(this.isCronFlavorStandard)throw"Invalid cron expression, there must be 5 segments"}var a=e;5===e.split(" ").length&&this.isCronFlavorStandard&&(e="0 "+e+" *");var n=y(e.split(" "),6),s=n[0],r=n[1],o=n[2],i=n[3],l=n[4],c=n[5];if(e.match(/\d+ 0\/\d+ \* 1\/1 \* [\?\*] \*/))this.activeTab="minutes",this.state.minutes.minutes=parseInt(r.substring(2)),this.state.minutes.seconds=parseInt(s);else if(e.match(/\d+ \d+ 0\/\d+ 1\/1 \* [\?\*] \*/))this.activeTab="hourly",this.state.hourly.hours=parseInt(o.substring(2)),this.state.hourly.minutes=parseInt(r),this.state.hourly.seconds=parseInt(s);else if(e.match(/\d+ \d+ \d+ 1\/\d+ \* [\?\*] \*/)){this.activeTab="daily",this.state.daily.subTab="everyDays",this.state.daily.everyDays.days=parseInt(i.substring(2));var h=parseInt(o);this.state.daily.everyDays.hours=this.getAmPmHour(h),this.state.daily.everyDays.hourType=this.getHourType(h),this.state.daily.everyDays.minutes=parseInt(r),this.state.daily.everyDays.seconds=parseInt(s)}else if(e.match(/\d+ \d+ \d+ [\?\*] \* MON-FRI \*/)){this.activeTab="daily",this.state.daily.subTab="everyWeekDay";h=parseInt(o);this.state.daily.everyWeekDay.hours=this.getAmPmHour(h),this.state.daily.everyWeekDay.hourType=this.getHourType(h),this.state.daily.everyWeekDay.minutes=parseInt(r),this.state.daily.everyWeekDay.seconds=parseInt(s)}else if(e.match(/\d+ \d+ \d+ [\?\*] \* (MON|TUE|WED|THU|FRI|SAT|SUN)(,(MON|TUE|WED|THU|FRI|SAT|SUN))* \*/)){this.activeTab="weekly",this.selectOptions.days.forEach((function(e){return t.state.weekly[e]=!1})),c.split(",").forEach((function(e){return t.state.weekly[e]=!0}));h=parseInt(o);this.state.weekly.hours=this.getAmPmHour(h),this.state.weekly.hourType=this.getHourType(h),this.state.weekly.minutes=parseInt(r),this.state.weekly.seconds=parseInt(s)}else if(e.match(/\d+ \d+ \d+ (\d+|L|LW|1W) 1\/\d+ [\?\*] \*/)){this.activeTab="monthly",this.state.monthly.subTab="specificDay",this.state.monthly.specificDay.day=i,this.state.monthly.specificDay.months=parseInt(l.substring(2));h=parseInt(o);this.state.monthly.specificDay.hours=this.getAmPmHour(h),this.state.monthly.specificDay.hourType=this.getHourType(h),this.state.monthly.specificDay.minutes=parseInt(r),this.state.monthly.specificDay.seconds=parseInt(s)}else if(e.match(/\d+ \d+ \d+ [\?\*] 1\/\d+ (MON|TUE|WED|THU|FRI|SAT|SUN)((#[1-5])|L) \*/)){var d=c.substr(0,3),m=c.substr(3);this.activeTab="monthly",this.state.monthly.subTab="specificWeekDay",this.state.monthly.specificWeekDay.monthWeek=m,this.state.monthly.specificWeekDay.day=d,this.state.monthly.specificWeekDay.months=parseInt(l.substring(2));h=parseInt(o);this.state.monthly.specificWeekDay.hours=this.getAmPmHour(h),this.state.monthly.specificWeekDay.hourType=this.getHourType(h),this.state.monthly.specificWeekDay.minutes=parseInt(r),this.state.monthly.specificWeekDay.seconds=parseInt(s)}else if(e.match(/\d+ \d+ \d+ (\d+|L|LW|1W) \d+ [\?\*] \*/)){this.activeTab="yearly",this.state.yearly.subTab="specificMonthDay",this.state.yearly.specificMonthDay.month=parseInt(l),this.state.yearly.specificMonthDay.day=i;h=parseInt(o);this.state.yearly.specificMonthDay.hours=this.getAmPmHour(h),this.state.yearly.specificMonthDay.hourType=this.getHourType(h),this.state.yearly.specificMonthDay.minutes=parseInt(r),this.state.yearly.specificMonthDay.seconds=parseInt(s)}else if(e.match(/\d+ \d+ \d+ [\?\*] \d+ (MON|TUE|WED|THU|FRI|SAT|SUN)((#[1-5])|L) \*/)){d=c.substr(0,3),m=c.substr(3);this.activeTab="yearly",this.state.yearly.subTab="specificMonthWeek",this.state.yearly.specificMonthWeek.monthWeek=m,this.state.yearly.specificMonthWeek.day=d,this.state.yearly.specificMonthWeek.month=parseInt(l);h=parseInt(o);this.state.yearly.specificMonthWeek.hours=this.getAmPmHour(h),this.state.yearly.specificMonthWeek.hourType=this.getHourType(h),this.state.yearly.specificMonthWeek.minutes=parseInt(r),this.state.yearly.specificMonthWeek.seconds=parseInt(s)}else this.activeTab="advanced",this.state.advanced.expression=a}},e.prototype.cronIsValid=function(e){if(e){var t=e.split(" ");return this.isCronFlavorQuartz&&(6===t.length||7===t.length)||this.isCronFlavorStandard&&5===t.length}return!1},e.prototype.getDefaultState=function(){var e=y(this.options.defaultTime.split(":").map(Number),3),t=e[0],a=e[1],n=e[2];return{minutes:{minutes:1,seconds:0},hourly:{hours:1,minutes:0,seconds:0},daily:{subTab:"everyDays",everyDays:{days:1,hours:this.getAmPmHour(t),minutes:a,seconds:n,hourType:this.getHourType(t)},everyWeekDay:{hours:this.getAmPmHour(t),minutes:a,seconds:n,hourType:this.getHourType(t)}},weekly:{MON:!0,TUE:!1,WED:!1,THU:!1,FRI:!1,SAT:!1,SUN:!1,hours:this.getAmPmHour(t),minutes:a,seconds:n,hourType:this.getHourType(t)},monthly:{subTab:"specificDay",specificDay:{day:"1",months:1,hours:this.getAmPmHour(t),minutes:a,seconds:n,hourType:this.getHourType(t)},specificWeekDay:{monthWeek:"#1",day:"MON",months:1,hours:this.getAmPmHour(t),minutes:a,seconds:n,hourType:this.getHourType(t)}},yearly:{subTab:"specificMonthDay",specificMonthDay:{month:1,day:"1",hours:this.getAmPmHour(t),minutes:a,seconds:n,hourType:this.getHourType(t)},specificMonthWeek:{monthWeek:"#1",day:"MON",month:1,hours:this.getAmPmHour(t),minutes:a,seconds:n,hourType:this.getHourType(t)}},advanced:{expression:this.isCronFlavorQuartz?"0 15 10 L-2 * ? *":"15 10 2 * *"}}},e.prototype.getOrdinalSuffix=function(e){if(e.length>1&&"1"===e.charAt(e.length-2))return"th";switch(e.charAt(e.length-1)){case"1":return"st";case"2":return"nd";case"3":return"rd";default:return"th"}},e.prototype.getSelectOptions=function(){return{months:this.getRange(1,12),monthWeeks:["#1","#2","#3","#4","#5","L"],days:["MON","TUE","WED","THU","FRI","SAT","SUN"],minutes:this.getRange(0,59),fullMinutes:this.getRange(0,59),seconds:this.getRange(0,59),hours:this.getRange(1,23),monthDays:this.getRange(1,31),monthDaysWithLasts:u(["1W"],u(this.getRange(1,31).map(String)),["LW","L"]),monthDaysWithOutLasts:u(this.getRange(1,31).map(String)),hourTypes:["AM","PM"]}},e.prototype.getRange=function(e,t){var a=t-e+1;return Array.apply(null,Array(a)).map((function(t,a){return a+e}))},e}();D.decorators=[{type:t.Component,args:[{selector:"cron-editor",template:'<div class="card cron-editor-main">\r\n\r\n  <div class="card-header">\r\n    \x3c!-- Tabs --\x3e\r\n    <mat-tab-group [(selectedIndex)]="selectedTabIndex">\r\n      <mat-tab label="Minutes" *ngIf="!options.hideMinutesTab">\r\n        <div class="">\r\n          Every\r\n          <mat-form-field>\r\n            <mat-select class="minutes" [disabled]="disabled || activeTab !== \'minutes\'" (selectionChange)="regenerateCron()"\r\n              [(ngModel)]="state.minutes.minutes" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let minute of selectOptions.minutes" [value]="minute">\r\n                {{minute}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>minute(s)\r\n          <span *ngIf="!options.hideSeconds && isCronFlavorQuartz">on second</span>\r\n          <mat-form-field *ngIf="!options.hideSeconds && isCronFlavorQuartz">\r\n            <mat-select class="seconds" [disabled]="disabled || activeTab !== \'minutes\'" (selectionChange)="regenerateCron()"\r\n              [(ngModel)]="state.minutes.seconds" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let second of selectOptions.seconds" [value]="second">\r\n                {{second}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label="Hourly" *ngIf="!options.hideHourlyTab">\r\n        <div class="">\r\n          Every\r\n          <mat-form-field>\r\n            <mat-select class="hours" [disabled]="disabled || activeTab !== \'hourly\'" (selectionChange)="regenerateCron()"\r\n              [(ngModel)]="state.hourly.hours" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let hour of selectOptions.hours" [value]="hour">\r\n                {{hour}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field> hour(s) on minute\r\n          <mat-form-field>\r\n            <mat-select class="minutes" [disabled]="disabled || activeTab !== \'hourly\'" (selectionChange)="regenerateCron()"\r\n              [(ngModel)]="state.hourly.minutes" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let minute of selectOptions.fullMinutes" [value]="minute">\r\n                {{minute}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <span *ngIf="!options.hideSeconds && isCronFlavorQuartz">and second</span>\r\n          <mat-form-field *ngIf="!options.hideSeconds && isCronFlavorQuartz">\r\n            <mat-select class="seconds" [disabled]="disabled || activeTab !== \'hourly\'" (selectionChange)="regenerateCron()"\r\n              [(ngModel)]="state.hourly.seconds" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let second of selectOptions.seconds" [value]="second">\r\n                {{second}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label="Daily" *ngIf="!options.hideDailyTab">\r\n        <div class="form-group">\r\n          <mat-radio-group [(ngModel)]="state.daily.subTab">\r\n            <mat-radio-button name="daily-radio" value="everyDays" [disabled]="disabled" (change)="regenerateCron()"\r\n              [ngClass]="state.formRadioClass" checked="checked">\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n          <label>Every\r\n            <mat-form-field>\r\n              <mat-select class="days" [disabled]="disabled || activeTab !== \'daily\' || state.daily.subTab !== \'everyDays\'"\r\n                (selectionChange)="regenerateCron()" [(ngModel)]="state.daily.everyDays.days" [ngClass]="options.formSelectClass">\r\n                <mat-option *ngFor="let monthDay of selectOptions.monthDays" [value]="monthDay">\r\n                  {{monthDay}}\r\n                </mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n          </label>&nbsp;\r\n          <label>day(s) at\r\n            <cron-time-picker [disabled]="disabled || activeTab !== \'daily\' || state.daily.subTab !== \'everyDays\'"\r\n              (onChange)="regenerateCron()" [(model)]="state.daily.everyDays" [selectClass]="options.formSelectClass"\r\n              [use24HourTime]="options.use24HourTime" [hideSeconds]="options.hideSeconds|| !isCronFlavorQuartz">\r\n            </cron-time-picker>\r\n          </label>\r\n        </div>\r\n\r\n        <div class="form-group">\r\n          <mat-radio-group [(ngModel)]="state.daily.subTab">\r\n            <mat-radio-button name="daily-radio" value="everyWeekDay" [disabled]="disabled" (change)="regenerateCron()"\r\n              [ngClass]="state.formRadioClass">\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n          Every working day at\r\n          <cron-time-picker [disabled]="disabled || activeTab !== \'daily\' || state.daily.subTab !== \'everyWeekDay\'"\r\n            (onChange)="regenerateCron()" [(model)]="state.daily.everyWeekDay" [selectClass]="options.formSelectClass"\r\n            [use24HourTime]="options.use24HourTime" [hideSeconds]="options.hideSeconds || !isCronFlavorQuartz">\r\n          </cron-time-picker>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label="Weekly" *ngIf="!options.hideWeeklyTab">\r\n        <div class="form-group">\r\n          <div class="row">\r\n            <div class="col-sm-6">\r\n              <mat-checkbox [disabled]="disabled || activeTab !== \'weekly\'" (change)="regenerateCron()" [(ngModel)]="state.weekly.MON"\r\n                [ngClass]="options.formCheckboxClass"> Monday</mat-checkbox>\r\n            </div>\r\n            <div class="col-sm-6">\r\n              <mat-checkbox [disabled]="disabled || activeTab !== \'weekly\'" (change)="regenerateCron()" [(ngModel)]="state.weekly.TUE"\r\n                [ngClass]="options.formCheckboxClass"> Tuesday</mat-checkbox>\r\n            </div>\r\n            <div class="col-sm-6">\r\n              <mat-checkbox [disabled]="disabled || activeTab !== \'weekly\'" (change)="regenerateCron()" [(ngModel)]="state.weekly.WED"\r\n                [ngClass]="options.formCheckboxClass"> Wednesday</mat-checkbox>\r\n            </div>\r\n            <div class="col-sm-6">\r\n              <mat-checkbox [disabled]="disabled || activeTab !== \'weekly\'" (change)="regenerateCron()" [(ngModel)]="state.weekly.THU"\r\n                [ngClass]="options.formCheckboxClass"> Thursday </mat-checkbox>\r\n            </div>\r\n            <div class="col-sm-6">\r\n              <mat-checkbox [disabled]="disabled || activeTab !== \'weekly\'" (change)="regenerateCron()" [(ngModel)]="state.weekly.FRI"\r\n                [ngClass]="options.formCheckboxClass"> Friday</mat-checkbox>\r\n            </div>\r\n            <div class="col-sm-6">\r\n              <mat-checkbox type="checkbox" [disabled]="disabled || activeTab !== \'weekly\'" (change)="regenerateCron()"\r\n                [(ngModel)]="state.weekly.SAT" [ngClass]="options.formCheckboxClass"> Saturday</mat-checkbox>\r\n            </div>\r\n            <div class="col-sm-6">\r\n              <mat-checkbox type="checkbox" [disabled]="disabled || activeTab !== \'weekly\'" (change)="regenerateCron()"\r\n                [(ngModel)]="state.weekly.SUN" [ngClass]="options.formCheckboxClass"> Sunday</mat-checkbox>\r\n            </div>\r\n          </div>\r\n          <div class="row">\r\n            <div class="col-sm-6">\r\n              at\r\n              <cron-time-picker [disabled]="disabled || activeTab !== \'weekly\'" (onChange)="regenerateCron()" [(model)]="state.weekly"\r\n                [selectClass]="options.formSelectClass" [use24HourTime]="options.use24HourTime" [hideSeconds]="options.hideSeconds|| !isCronFlavorQuartz">\r\n              </cron-time-picker>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </mat-tab>\r\n      <mat-tab [label]="options.tMonthly || \'Monthly\'" *ngIf="!options.hideMonthlyTab">\r\n        <div class="form-group">\r\n          <mat-radio-group [(ngModel)]="state.monthly.subTab">\r\n            <mat-radio-button name="monthly-radio" value="specificDay" [disabled]="disabled" (change)="regenerateCron()"\r\n                              [ngClass]="state.formRadioClass">\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n          {{options.tOnThe || \'On the\'}} {{options.tDay}}\r\n          <mat-form-field *ngIf="isCronFlavorQuartz">\r\n            <mat-select class="month-days" [disabled]="disabled || activeTab !== \'monthly\' || state.monthly.subTab !== \'specificDay\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.monthly.specificDay.day" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let monthDaysWithLast of selectOptions.monthDaysWithLasts" [value]="monthDaysWithLast">\r\n                {{monthDayDisplay(monthDaysWithLast)}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field *ngIf="isCronFlavorStandard" style="width:50px">\r\n            <mat-select class="month-days" [disabled]="disabled || activeTab !== \'monthly\' || state.monthly.subTab !== \'specificDay\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.monthly.specificDay.day" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let monthDaysWithOutLast of selectOptions.monthDaysWithOutLasts" [value]="monthDaysWithOutLast">\r\n                {{monthDayDisplay(monthDaysWithOutLast)}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          {{options.tOfEvery || \'of every\'}} \r\n          <mat-form-field style="width:50px">\r\n            <mat-select class="months-small" [disabled]="disabled || activeTab !== \'monthly\' || state.monthly.subTab !== \'specificDay\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.monthly.specificDay.months" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let month of selectOptions.months" [value]="month">\r\n                {{month}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <span *ngIf="state.monthly.specificDay.months == 1">{{options.tMonth || \'month\'}} {{options.tAt || \'at\'}}</span>\r\n          <span *ngIf="state.monthly.specificDay.months > 1">{{options.tMonths || \'months\'}} {{options.tAt || \'at\'}}</span>\r\n\r\n          <cron-time-picker [disabled]="disabled || activeTab !== \'monthly\' || state.monthly.subTab !== \'specificDay\'"\r\n                            (onChange)="regenerateCron()" [(model)]="state.monthly.specificDay" [selectClass]="options.formSelectClass"\r\n                            [use24HourTime]="options.use24HourTime" [hideSeconds]="options.hideSeconds || !isCronFlavorQuartz">\r\n          </cron-time-picker>\r\n        </div>\r\n        <div class="" *ngIf="!options.hideSpecificWeekDayTab">\r\n          <mat-radio-group [(ngModel)]="state.monthly.subTab">\r\n            <mat-radio-button name="monthly-radio" value="specificWeekDay" [disabled]="disabled" (change)="regenerateCron()"\r\n                              [ngClass]="state.formRadioClass">\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n          {{options.tOnThe ||  \'On the\'}}\r\n          <mat-form-field style="width:100px">\r\n            <mat-select class="day-order-in-month" [disabled]="disabled || activeTab !== \'monthly\' || state.monthly.subTab !== \'specificWeekDay\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.monthly.specificWeekDay.monthWeek" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let monthWeek of selectOptions.monthWeeks" [value]="monthWeek">\r\n                {{monthWeekDisplay(monthWeek)}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          {{options.tOf}}\r\n          <mat-form-field>\r\n            <mat-select class="week-days" [disabled]="disabled || activeTab !== \'monthly\' || state.monthly.subTab !== \'specificWeekDay\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.monthly.specificWeekDay.day" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let day of selectOptions.days" [value]="day">\r\n                {{dayDisplay(day)}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          {{options.tOfEvery ||  \'of every\'}}\r\n          <mat-form-field style="width:50px">\r\n            <mat-select class="months-small" [disabled]="disabled || activeTab !== \'monthly\' || state.monthly.subTab !== \'specificWeekDay\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.monthly.specificWeekDay.months" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let month of selectOptions.months" [value]="month">\r\n                {{month}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <span *ngIf="state.monthly.specificWeekDay.months == 1">{{options.tMonth || \'month\'}} {{options.tAt || \'at\'}}</span>\r\n          <span *ngIf="state.monthly.specificWeekDay.months > 1">{{options.tMonths || \'months\'}} {{options.tAt || \'at\'}}</span>\r\n          <cron-time-picker [disabled]="disabled || activeTab !== \'monthly\' || state.monthly.subTab !== \'specificWeekDay\'"\r\n                            (onChange)="regenerateCron()" [(model)]="state.monthly.specificWeekDay" [selectClass]="options.formSelectClass"\r\n                            [use24HourTime]="options.use24HourTime" [hideSeconds]="options.hideSeconds || !isCronFlavorQuartz">\r\n          </cron-time-picker>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab [label]="options.tYearly || \'Yearly\'" *ngIf="!options.hideYearlyTab">\r\n        <div class="form-group">\r\n          <mat-radio-group [(ngModel)]="state.yearly.subTab">\r\n            <mat-radio-button name="yearly-radio" value="specificMonthDay" [disabled]="disabled" (change)="regenerateCron()"\r\n                              [ngClass]="state.formRadioClass">\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n          {{ options.tEvery ||\'Every\'}}\r\n          <mat-form-field>\r\n            <mat-select class="months" [disabled]="disabled || activeTab !== \'yearly\' || state.yearly.subTab !== \'specificMonthDay\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.yearly.specificMonthDay.month" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let month of selectOptions.months" [value]="month">\r\n                {{monthDisplay(month)}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          {{options.tOnThe2 || \'on the\'}} {{options.tDay}}\r\n          <mat-form-field *ngIf="isCronFlavorQuartz" class="month-days">\r\n            <mat-select [disabled]="disabled || activeTab !== \'yearly\' || state.yearly.subTab !== \'specificMonthDay\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.yearly.specificMonthDay.day" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let monthDaysWithLast of selectOptions.monthDaysWithLasts" [value]="monthDaysWithLast">\r\n                {{monthDayDisplay(monthDaysWithLast)}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          <mat-form-field *ngIf="isCronFlavorStandard">\r\n            <mat-select class="month-days" [disabled]="disabled || activeTab !== \'yearly\' || state.yearly.subTab !== \'specificMonthDay\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.yearly.specificMonthDay.day" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let monthDaysWithOutLast of selectOptions.monthDaysWithOutLasts" [value]="monthDaysWithOutLast">\r\n                {{monthDayDisplay(monthDaysWithOutLast)}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          {{options.tAt || \'at\'}}\r\n          <cron-time-picker [disabled]="disabled || activeTab !== \'yearly\' || state.yearly.subTab !== \'specificMonthDay\'"\r\n                            (onChange)="regenerateCron()" [(model)]="state.yearly.specificMonthDay" [selectClass]="options.formSelectClass"\r\n                            [use24HourTime]="options.use24HourTime" [hideSeconds]="options.hideSeconds || !isCronFlavorQuartz">\r\n          </cron-time-picker>\r\n        </div>\r\n        <div class="" *ngIf="!options.hideSpecificMonthWeekTab">\r\n          <mat-radio-group [(ngModel)]="state.yearly.subTab">\r\n            <mat-radio-button name="yearly-radio" value="specificMonthWeek" [disabled]="disabled" (change)="regenerateCron()"\r\n                              [ngClass]="state.formRadioClass">\r\n            </mat-radio-button>\r\n          </mat-radio-group>\r\n          {{options.tOnThe || \'On the\'}}\r\n          <mat-form-field>\r\n            <mat-select class="day-order-in-month" [disabled]="disabled || activeTab !== \'yearly\' || state.yearly.subTab !== \'specificMonthWeek\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.yearly.specificMonthWeek.monthWeek" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let monthWeek of selectOptions.monthWeeks" [value]="monthWeek">\r\n                {{monthWeekDisplay(monthWeek)}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          {{options.tOf}}\r\n          <mat-form-field>\r\n            <mat-select class="week-days" [disabled]="disabled || activeTab !== \'yearly\' || state.yearly.subTab !== \'specificMonthWeek\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.yearly.specificMonthWeek.day" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let day of selectOptions.days" [value]="day">\r\n                {{dayDisplay(day)}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          {{options.tOf2 || \'of\'}}\r\n          <mat-form-field>\r\n            <mat-select class="months" [disabled]="disabled || activeTab !== \'yearly\' || state.yearly.subTab !== \'specificMonthWeek\'"\r\n                        (selectionChange)="regenerateCron()" [(ngModel)]="state.yearly.specificMonthWeek.month" [ngClass]="options.formSelectClass">\r\n              <mat-option *ngFor="let month of selectOptions.months" [value]="month">\r\n                {{monthDisplay(month)}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n          {{options.tAt || \'at\'}}\r\n          <cron-time-picker [disabled]="disabled || activeTab !== \'yearly\' || state.yearly.subTab !== \'specificMonthWeek\'"\r\n                            (onChange)="regenerateCron()" [(model)]="state.yearly.specificMonthWeek" [selectClass]="options.formSelectClass"\r\n                            [use24HourTime]="options.use24HourTime" [hideSeconds]="options.hideSeconds || !isCronFlavorQuartz">\r\n          </cron-time-picker>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label="Advanced" *ngIf="!options.hideAdvancedTab">\r\n        Cron Expression\r\n        <mat-form-field>\r\n          <input matInput type="text" class="advanced-cron-editor-input" ng-disabled="disabled || activeTab !== \'advanced\'"\r\n            (change)="regenerateCron()" [(ngModel)]="state.advanced.expression" [ngClass]="options.formInputClass">\r\n        </mat-form-field>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n',styles:[".cron-editor-main .cron-editor-container{margin-top:10px}.cron-editor-main .cron-editor-container .cron-editor-radio{display:inline-block;width:20px}.cron-editor-main .cron-editor-container .cron-editor-checkbox,.cron-editor-main .cron-editor-container .cron-editor-input,.cron-editor-main .cron-editor-container .cron-editor-select{display:inline-block}.cron-editor-main .cron-editor-container .well-time-wrapper{padding-left:20px}.cron-editor-main .cron-editor-container .inline-block{display:inline-block}.cron-editor-main .cron-editor-container .days,.cron-editor-main .cron-editor-container .hours,.cron-editor-main .cron-editor-container .minutes,.cron-editor-main .cron-editor-container .seconds{width:70px}.cron-editor-main .cron-editor-container .months{width:120px}.cron-editor-main .cron-editor-container .month-days{width:130px}.cron-editor-main .cron-editor-container .months-small{width:60px}.cron-editor-main .cron-editor-container .day-order-in-month{width:95px}.cron-editor-main .cron-editor-container .week-days{width:120px}.cron-editor-main .cron-editor-container .advanced-cron-editor-input{width:200px}.cron-editor-main .cron-editor-container .hour-types{width:70px}.nav-tabs li a{cursor:pointer}"]}]}],D.propDecorators={disabled:[{type:t.Input}],options:[{type:t.Input}],cron:[{type:t.Input}],cronChange:[{type:t.Output}]};var k=function(){function e(){this.onChange=new t.EventEmitter}return e.prototype.ngOnInit=function(){return d(this,void 0,void 0,(function(){return m(this,(function(e){return this.hours=this.use24HourTime?this.range(0,23):this.range(0,12),this.minutes=this.range(0,59),this.seconds=this.range(0,59),this.hourTypes=["AM","PM"],[2]}))}))},e.prototype.changeEmit=function(){console.log("changeEmit"),this.onChange.emit()},e.prototype.range=function(e,t){var a=t-e+1;return Array.apply(void 0,Array(a)).map((function(t,a){return a+e}))},e}();k.decorators=[{type:t.Component,args:[{selector:"cron-time-picker",template:'\x3c!-- hour --\x3e\r\n<mat-form-field style="width: 50px;">\r\n  <mat-select style="width: 20px; display: inline;" (selectionChange)="changeEmit()" [(ngModel)]="model.hours" [disabled]="disabled"\r\n    [ngClass]="selectClass">\r\n    <mat-option *ngFor="let hour of hours" [value]="hour">{{hour}}</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n\r\n\x3c!-- minute --\x3e\r\n<mat-form-field style="width: 50px;">\r\n  <mat-select style="width: 20px; display: inline;" (selectionChange)="changeEmit()" [(ngModel)]="model.minutes" [disabled]="disabled"\r\n    [ngClass]="selectClass">\r\n    <mat-option *ngFor="let minute of minutes" [value]="minute">{{minute}}</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n\r\n\x3c!-- second --\x3e\r\n<mat-form-field *ngIf="!hideSeconds" style="width: 50px;">\r\n  <mat-select style="width: 20px; display: inline;" (selectionChange)="changeEmit()" [(ngModel)]="model.seconds" [disabled]="disabled"\r\n     [ngClass]="selectClass">\r\n    <mat-option *ngFor="let second of seconds" [value]="second">{{second}}</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n\r\n\x3c!-- am/pm --\x3e\r\n<mat-form-field *ngIf="!use24HourTime" style="width: 50px;">\r\n  <mat-select style="width: 20px; display: inline;" (selectionChange)="changeEmit()" [(ngModel)]="model.hourType" [disabled]="disabled"\r\n     [ngClass]="selectClass">\r\n    <mat-option *ngFor="let hourType of hourTypes" [value]="hourType">{{hourType}}</mat-option>\r\n  </mat-select>\r\n</mat-form-field>\r\n'}]}],k.propDecorators={onChange:[{type:t.Output}],disabled:[{type:t.Input}],model:[{type:t.Input}],selectClass:[{type:t.Input}],use24HourTime:[{type:t.Input}],hideSeconds:[{type:t.Input}]};var M=function(){};M.decorators=[{type:t.NgModule,args:[{imports:[n.CommonModule,a.FormsModule,s.MatTabsModule,r.MatSelectModule,o.MatFormFieldModule,i.MatRadioModule,l.MatCheckboxModule,c.MatInputModule,h.BrowserAnimationsModule],exports:[D,k],declarations:[D,k]}]}],e.CronEditorModule=M,e.CronGenComponent=D,e.ɵa=k,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=alexandrupaul7-ngx-cron-editor.umd.min.js.map